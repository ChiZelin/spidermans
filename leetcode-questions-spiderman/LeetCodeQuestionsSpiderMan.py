#!/usr/bin/env python3
# -*- coding: UTF-8 -*-

from bs4 import BeautifulSoup
from operator import itemgetter
import datetime
import json
import requests
import time

def getTags():
    html=requests.get("https://leetcode.com/problemset/all/")
    soup = BeautifulSoup(html.text, 'html.parser')
    tagAs = soup.find_all('a', attrs='btn btn-xs btn-default round-btn tags-btn sm-topic') # 存储形如 "/tag/array/" 字符串的列表
    tags = []
    for tagA in tagAs:
        tagPath = tagA.get('href')[5:-1]
        tagName = tagA.find('span', attrs='text-sm text-gray').text
        tags.append({'tagName' : tagName.strip(), 'tagPath' : tagPath})
    return tags

def getQuestionsTitleSlugs(tag):
    postUrl = 'https://leetcode.com/graphql'
    payloadData = {"operationName":"getTopicTag","variables":{"slug":"" + tag + ""},"query":"query getTopicTag($slug: String!) {\n  topicTag(slug: $slug) {\n    name\n    translatedName\n    questions {\n      titleSlug\n      isPaidOnly\n    }\n    }\n  \n}\n"}
    payloadHeader = {
        'content-type': 'application/json'
    }
    response = requests.post(postUrl, data=json.dumps(payloadData), headers=payloadHeader)
    dictdata = response.json()
    return dictdata['data']['topicTag']['questions']

def getQuestionDatas(titleSlug):
    postUrl = 'https://leetcode.com/graphql'
    payloadData = {
        'operationName': 'questionData',
        'query': "query questionData($titleSlug: String!) {  question(titleSlug: $titleSlug) {    questionFrontendId    title    titleSlug    difficulty    likes    dislikes    }}",
        'variables': {
            'titleSlug': titleSlug,
        }
    }
    payloadHeader = {
        'content-type': 'application/json'
    }
    while True:
        try:
            response = requests.post(postUrl, data=json.dumps(payloadData), headers=payloadHeader)
            if response.text.startswith("{\"data\":"):
                break
        except KeyboardInterrupt:
            raise
        except:
            pass
    dictData = response.json()
    return dictData['data']['question']

tags = getTags()
rankingList = []
rankingList.append("# " + "Leetcode Questions Ranking List  ")
rankingList.append("According to this list, we can see which topics are popular.  " )
rankingList.append("Whether you are a student or an interviewer, you can refer to this list when choosing questions.  \n" )
rankingList.append("Ranking by Net Profit (Likes - Dislikes).  " )
rankingList.append("Grouping by topic.  ")
rankingList.append("No payment questions.  ")
rankingList.append("Generated by: [LeetCode Questions Spiderman](https://github.com/ChiZelin/spidermans/tree/master/leetcode-questions-spiderman)  ")
rankingList.append("Generated time: " + datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S' + "  "))
rankingList.append("***********************************************")
mdFile=open('LeetcodeRankingListRankingByNetProfit.md', 'w')
for i in rankingList:
    mdFile.write(i)
    mdFile.write("\n")
for tag in tags:
    rankingList = []
    tagName = tag['tagName']
    tagPath = tag['tagPath']
    rankingList.append("## " + tagName)
    rankingList.append("| ID | Title | Net Profit | Likes | Dislikes | Difficulty |")
    rankingList.append("| :-------- | :-------- | :-------- | :------- | :------- | :-------- |")
    questionsInfos = []
    questionsTitleSlugs = getQuestionsTitleSlugs(tagPath)
    print(tagName)
    for titleSlugData in questionsTitleSlugs:
        isPaidOnly = titleSlugData['isPaidOnly']
        if isPaidOnly == False:
            titleSlug = titleSlugData['titleSlug']
            questionInfo = getQuestionDatas(titleSlug)
            questionInfo['netProfit'] = questionInfo['likes'] - questionInfo['dislikes']
            questionsInfos.append(questionInfo)
            print(questionInfo)
    questionsInfos.sort(key=itemgetter('netProfit'), reverse=True)
    for questionInfo in questionsInfos:
        rankingList.append("| " + questionInfo['questionFrontendId'] + " | [" + questionInfo['title'] + "](" + "https://leetcode.com/problems/" +
        questionInfo['titleSlug'] + "/) | " + str(questionInfo['netProfit']) + " | " + str(questionInfo['likes']) + " | " + str(questionInfo['dislikes']) + " | " + questionInfo['difficulty'])
    for i in rankingList:
        mdFile.write(i)
        mdFile.write("\n")
mdFile.close()
print("LeetcodeRankingListRankingByNetProfit.md is generated!")